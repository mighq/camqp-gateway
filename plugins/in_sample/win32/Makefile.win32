TARGET_BIN=in_sample.dll
SOURCES=in_sample.c
DEF_FILE=dll.def

DIR_GLIB=../../libs/win32/glib-2.22.4
DIR_MANAGER_API=../../core/api

# dependencies
INCLUDES=									\
	-I${DIR_GLIB}/include/glib-2.0			\
	-I${DIR_GLIB}/lib/glib-2.0/include		\
	-I${DIR_MANAGER_API}

LIBS=					\
	-L${DIR_GLIB}/lib	\
		-lglib-2.0		\
		-lgthread-2.0	\
		-lgmodule-2.0

# environment
CC=gcc
CFLAGS=-Wall -O0 -ggdb
DLLTOOL=dlltool

DIR_BIN=bin
DIR_OBJ=obj

# computed parts
OBJS=$(patsubst %.c,${DIR_OBJ}/%.o,${SOURCES})
TARGET=${DIR_BIN}/${TARGET_BIN}

all: ${TARGET}

${TARGET}: ${OBJS} | ${DIR_BIN}
	${CC} -mdll -o junk1.tmp -Wl,--base-file,junk2.tmp ${OBJS} ${LIBS}
	rm junk1.tmp
	${DLLTOOL} --dllname ${TARGET_BINARY} --base-file junk2.tmp --output-exp junk3.tmp --def win32/${DEF_FILE}
	rm junk2.tmp
	${CC} -mdll -o ${TARGET} ${OBJS} ${LIBS} -Wl,junk3.tmp -Wl,--enable-stdcall-fixup
	rm junk3.tmp

${DIR_OBJ}/%.o: %.c ${DIR_OBJ}
	${CC} ${CFLAGS} ${INCLUDES} -o $@ -c $<

# directories creation
${DIR_BIN}:
	mkdir ${DIR_BIN}

${DIR_OBJ}:
	mkdir ${DIR_OBJ}

# CLEANUP
clean:
	rm -rf ${TARGET}
	rm -rf ${DIR_OBJ}

install: ${TARGET}
	mkdir -p ../../core/bin/plugins
	cp ${TARGET} ../../core/bin/plugins
